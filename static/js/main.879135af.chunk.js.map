{"version":3,"sources":["services.js","components/login.js","components/signUp.js","components/events.js","components/eventsRegUser.js","components/removedInfo.js","App.js","index.js"],"names":["axios","require","CryptoJS","username","password","cipherText","AES","encrypt","toString","post","put","date","get","notice","lesson","officehours","eventType","event","Login","props","useState","setUsername","setPassword","show","setShow","body","setBody","editFieldRef","useRef","useEffect","document","title","current","focus","login","Services","then","response","history","push","catch","error","b","data","Container","Form","Group","className","controlId","Label","Control","type","placeholder","value","onChange","e","target","ref","onKeyPress","key","Button","variant","onClick","Modal","onHide","autoFocus","Header","closeButton","closeLabel","Title","Body","id","SignUp","passwordConfirm","setPasswordConfirm","handleShow","signup","today","Date","toISOString","split","prettyTime","toLocaleTimeString","navigator","language","hour","minute","prettyLuogo","luogo","convertToPlainText","html","tmpElement","createElement","innerHTML","innerText","Events","setDate","notices","setNotices","lessons","setLessons","setOfficehours","a","getEvents","events","console","log","retrieveData","ev","err","newDate","selectedDate","max","required","Tabs","defaultActiveKey","Tab","eventKey","Table","striped","bordered","hover","responsive","map","n","index","length","dataPubblicazione","toLocaleString","weekday","year","month","day","l","nome","ora","replace","o","note","EventsRegUser","selDate","localStorage","getItem","JSON","parse","hided","setHided","hideEvent","eventId","user","hideNotice","status","hideLesson","hideOfficehours","d","eventi","diversoDaTutti","saved","toHide","res","i","getHidedInfo","info","noticesToHide","lessonsToHide","officehoursToHide","ogg","newNotices","filter","newLessons","newOfficehours","checkInfo","hidedInfo","size","RemovedInfo","unhided","setUnhided","unhideEvent","removeEvent","finish","App","loggedInUser","setUser","setItem","stringify","clear","role","Navbar","expand","bg","Brand","href","Toggle","Collapse","Nav","Text","to","Link","exact","path","render","documentElement","lang","ReactDOM","getElementById"],"mappings":"wRAAMA,EAAQC,EAAQ,IAChBC,EAAWD,EAAQ,KAuCV,M,qFApCX,SAAME,EAAUC,GACZ,IAAMC,EAAaH,EAASI,IAAIC,QAAQH,EAAU,iBAAiBI,WACnE,OAAOR,EAAMS,KAAK,2DAA4D,CAACN,SAAUA,EAAUC,SAAYA,EAAgBC,EAAL,O,oBAG9H,SAAOF,EAAUC,GACb,IAAMC,EAAaH,EAASI,IAAIC,QAAQH,EAAU,iBAAiBI,WACnE,OAAOR,EAAMU,IAAN,kEAAqEP,GAAY,CAACC,SAAYA,EAAgBC,EAAL,O,uBAGpH,SAAUM,GACN,OAAOX,EAAMY,IAAN,mEAAsED,M,wBAGjF,SAAWR,EAAUQ,EAAME,GACvB,OAAOb,EAAMS,KAAK,6DAA8D,CAACN,SAAUA,EAAUQ,KAAMA,EAAME,OAAQA,M,wBAG7H,SAAWV,EAAUQ,EAAMG,GACvB,OAAOd,EAAMS,KAAK,6DAA8D,CAACN,SAAUA,EAAUQ,KAAMA,EAAMG,OAAQA,M,6BAG7H,SAAgBX,EAAUQ,EAAMI,GAC5B,OAAOf,EAAMS,KAAK,iEAAkE,CAACN,SAAUA,EAAUQ,KAAMA,EAAMI,YAAaA,M,0BAGtI,SAAaZ,EAAUQ,GACnB,OAAOX,EAAMY,IAAN,kEAAqET,EAArE,mBAAwFQ,M,yBAGnG,SAAYR,EAAUQ,EAAMK,EAAWC,GACnC,OAAOjB,EAAMS,KAAK,4DAA6D,CAACN,SAAUA,EAAUQ,KAAMA,EAAMK,UAAWA,EAAWC,MAAOA,Q,aCqEtIC,EAhGD,SAACC,GACX,MAAgCC,mBAAS,IAAzC,mBAAOjB,EAAP,KAAiBkB,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAOhB,EAAP,KAAiBkB,EAAjB,KAEA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAEMC,EAAeC,iBAAO,MAE5BC,qBAAU,WACNC,SAASC,MAAQ,uBACjBJ,EAAaK,QAAQC,UACtB,IAEH,IAqBMC,EAAQ,WACVC,EAASD,MAAM/B,EAAUC,GAChBgC,MAAK,SAACC,GACHlB,EAAMe,MAAM,CAAC/B,SAAUA,EAAUC,SAAUA,IAC3Ce,EAAMmB,QAAQC,KAAK,QAEtBC,OAAM,SAACC,GAXD,IAACC,IAYOD,EAAMJ,SAASM,KAAKF,MAX3Cf,EAAQgB,GACRlB,GAAQ,OAcZ,OACI,eAACoB,EAAA,EAAD,WACI,kEACA,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,eAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,yCACA,cAACJ,EAAA,EAAKK,QAAN,CACIC,KAAK,OACLC,YAAY,WACZC,MAAOlD,EACPmD,SA1CK,SAACC,GACtB,IAAMpD,EAAWoD,EAAEC,OAAOH,MAC1BhC,EAAYlB,IAyCIsD,IAAK9B,EACL,gBAAc,YAGtB,eAACkB,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,eAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,yCACA,cAACJ,EAAA,EAAKK,QAAN,CACIC,KAAK,WACLC,YAAY,WACZC,MAAOjD,EACPkD,SAhDK,SAACC,GACtB,IAAMnD,EAAWmD,EAAEC,OAAOH,MAC1B/B,EAAYlB,IA+CI,gBAAc,OACdsD,WAAY,SAACzC,GACQ,UAAdA,EAAM0C,KACLzB,UAKhB,cAAC0B,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS5B,EAAnC,sBAKJ,eAAC6B,EAAA,EAAD,CACIxC,KAAMA,EACNyC,OA3DQ,WAEhB1C,EAAY,IACZE,GAAQ,IAyDAyC,WAAS,EACT,kBAAgB,aAJpB,UAMI,cAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAACC,WAAW,SAArC,SACI,cAACL,EAAA,EAAMM,MAAP,4BAEJ,cAACN,EAAA,EAAMO,KAAP,CAAYC,GAAG,aAAf,SAA6B9C,WC+B9B+C,EAzHA,SAACrD,GACZ,MAAgCC,mBAAS,IAAzC,mBAAOjB,EAAP,KAAiBkB,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAOhB,EAAP,KAAiBkB,EAAjB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOqD,EAAP,KAAwBC,EAAxB,KAEA,EAAwBtD,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAEMC,EAAeC,iBAAO,MAE5BC,qBAAU,WACNC,SAASC,MAAQ,+BACjBJ,EAAaK,QAAQC,UACtB,IAEH,IAsBM0C,EAAa,SAACjC,GAChBhB,EAAQgB,GACRlB,GAAQ,IAGNoD,EAAS,WACRzE,GAAYC,GAAYqE,GAAmBrE,IAAaqE,EACvDtC,EAASyC,OAAOzE,EAAUC,GACrBgC,MAAK,SAACC,GACHlB,EAAMe,MAAM,CAAC/B,SAAUA,EAAUC,SAAUA,IAC3Ce,EAAMmB,QAAQC,KAAK,QAEtBC,OAAM,SAACC,GACJkC,EAAWlC,EAAMJ,SAASM,KAAKF,UAInCkC,EADDvE,GAAYqE,GAAmBrE,IAAaqE,EAChC,qCAEA,6BAKvB,OACI,eAAC7B,EAAA,EAAD,WACI,0EACA,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,eAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,sCACA,cAACJ,EAAA,EAAKK,QAAN,CACIC,KAAK,OACLC,YAAY,WACZC,MAAOlD,EACPmD,SAxDK,SAACC,GACtB,IAAMpD,EAAWoD,EAAEC,OAAOH,MAC1BhC,EAAYlB,IAuDIsD,IAAK9B,EACL,gBAAc,YAGtB,eAACkB,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,eAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,sCACA,cAACJ,EAAA,EAAKK,QAAN,CACIC,KAAK,WACLC,YAAY,WACZC,MAAOjD,EACPkD,SA9DK,SAACC,GACtB,IAAMnD,EAAWmD,EAAEC,OAAOH,MAC1B/B,EAAYlB,IA6DI,gBAAc,YAGtB,eAACyC,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,oBAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,wCACA,cAACJ,EAAA,EAAKK,QAAN,CACIC,KAAK,WACLC,YAAY,oBACZC,MAAOoB,EACPnB,SAnEY,SAACC,GAC7B,IAAMnD,EAAWmD,EAAEC,OAAOH,MAC1BqB,EAAmBtE,IAkEH,gBAAc,OACdsD,WAAY,SAACzC,GACQ,UAAdA,EAAM0C,KACLiB,UAKhB,cAAChB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASc,EAAnC,sBAKJ,eAACb,EAAA,EAAD,CACIxC,KAAMA,EACNyC,OA9EQ,WAGhBU,EAAmB,IACnBlD,GAAQ,IA2EAyC,WAAS,EACT,kBAAgB,aAJpB,UAMI,cAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAACC,WAAW,SAArC,SACI,cAACL,EAAA,EAAMM,MAAP,4BAEJ,cAACN,EAAA,EAAMO,KAAP,CAAYC,GAAG,aAAf,SAA6B9C,W,wBClHvCoD,GAAQ,IAAIC,MAAOC,cAAcC,MAAM,KAAK,GAE5CC,EAAa,SAACtE,GAEhB,OADQ,IAAImE,KAAKnE,GACRuE,mBAAmBC,UAAUC,SAAU,CAC5CC,KAAM,UACNC,OAAO,aAITC,EAAc,SAACC,GACjB,MAAM,GAAN,OAAUA,EAAK,KAAf,YAA2BA,EAAK,KAAhC,wBAAwDA,EAAK,aAG3DC,EAAqB,SAACC,GACxB,IAAIC,EAAa7D,SAAS8D,cAAc,KAExC,OADAD,EAAWE,UAAYH,EAChBC,EAAWG,WAiLPC,EA9KA,SAAC5E,GACZ,MAAwBC,mBAASyD,GAAjC,mBAAOlE,EAAP,KAAaqF,EAAb,KACA,EAA8B5E,mBAAS,IAAvC,mBAAO6E,EAAP,KAAgBC,EAAhB,KACA,EAA8B9E,mBAAS,IAAvC,mBAAO+E,EAAP,KAAgBC,EAAhB,KACA,EAAsChF,mBAAS,IAA/C,mBAAOL,EAAP,KAAoBsF,EAApB,KAkCA,OAvBAxE,qBAAU,WAAM,4CAEZ,sBAAAyE,EAAA,+EACWnE,EAASoE,UAAU5F,GACrByB,MAAK,SAACC,GACH,IAAMmE,EAASnE,EAASM,KACxB,MAAO,CAACsD,QAASO,EAAM,QAAaL,QAASK,EAAM,QAAN,MAA4BzF,YAAayF,EAAM,YAAN,UAEzFhE,OAAM,SAACC,GAEJ,OADAgE,QAAQC,IAAIjE,GACL,CAACwD,QAAS,GAAIE,QAAS,GAAIpF,YAAa,QAR3D,4CAFY,kEAcZ4F,GAAevE,MAAK,SAACwE,GACjBV,EAAWU,EAAGX,SACdG,EAAWQ,EAAGT,SACdE,EAAeO,EAAG7F,gBACnB,SAAC8F,GACAJ,QAAQC,IAAIG,QAElB,CAAClG,IAGC,eAACiC,EAAA,EAAD,WACI,uCACA,6JAEA,eAACC,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,eAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,qHACA,cAACJ,EAAA,EAAKK,QAAN,CACIH,UAAU,UACVI,KAAK,OACLE,MAAO1C,EACP2C,SA3CK,SAACC,GAClB,IAAM5C,EAAO4C,EAAEC,OAAOH,MAChByD,EAAU,IAAIhC,KAAKnE,GAAMoE,cAAcC,MAAM,KAAK,GACxDgB,EAAQc,GACR3F,EAAM4F,aAAaD,IAwCPE,IAAKnC,EACLoC,UAAQ,OAIhB,eAACC,EAAA,EAAD,CAAMC,iBAAiB,SAAS5C,GAAG,cAAnC,UACI,eAAC6C,EAAA,EAAD,CAAKC,SAAS,SAAStF,MAAM,SAA7B,UACI,eAACuF,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACI,gCACI,+BACI,uDACA,wCACA,uCACA,+CAGR,gCACKzB,EAAQ0B,KAAI,SAACC,EAAGC,GACb,GAAiB,IAAbD,EAAEE,OAAc,CAChB,IAAMC,EAAoB,IAAIjD,KAAK8C,EAAC,mBAAuBI,eAAe7C,UAAUC,SAAU,CAC1F6C,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,YAET,OACI,+BACI,6BAAKL,IACL,6BAAKH,EAAC,SACN,6BAAKnC,EAAmBmC,EAAC,SACzB,6BAAKA,EAAC,aAJV,kBAAoBjH,EAApB,YAA4BkH,IAQhC,OACI,wCAAoBlH,EAApB,YAA4BkH,YAM5B,IAAnB5B,EAAQ6B,OAAgB,gEAA2C,yBAExE,eAACV,EAAA,EAAD,CAAKC,SAAS,UAAUtF,MAAM,UAA9B,UACI,eAACuF,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACI,gCACI,+BACI,uEACA,qCACA,4CAGR,gCACKvB,EAAQwB,KAAI,SAACU,EAAGR,GAEb,IAAIS,EAAO,KACPC,EAAM,KACN/C,EAAQ,KAUZ,OATiB,IAAb6C,EAAEP,SACFQ,EAAOD,EAAC,KAASG,QAAQ,KAAK,MAAMA,QAAQ,MAAM,KAAKA,QAAQ,IAAI,MAAMA,QAAQ,KAAK,IACvD,IAA3BH,EAAC,WAAeP,SAChBS,EAAG,UAAMtD,EAAWoD,EAAC,WAAe,GAAhB,WAAjB,cAAuDpD,EAAWoD,EAAC,WAAe,GAAhB,UAC1B,IAAvCA,EAAC,WAAe,GAAhB,MAA4BP,SAC5BtC,EAAQD,EAAY8C,EAAC,WAAe,GAAhB,MAA4B,OAKxD,+BACCC,EAAS,6BAAKA,IAAiB,uBAC/BC,EAAQ,6BAAKA,IAAgB,uBAC7B/C,EAAU,6BAAKA,IAAkB,yBAHlC,kBAAoB7E,EAApB,YAA4BkH,YASxB,IAAnB1B,EAAQ2B,OAAgB,iEAA4C,yBAEzE,eAACV,EAAA,EAAD,CAAKC,SAAS,cAActF,MAAM,cAAlC,UACI,eAACuF,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACI,gCACI,+BACI,sCACA,sCACA,qCACA,4CAGR,gCACK3G,EAAY4G,KAAI,SAACc,EAAGZ,GAEjB,IAAIS,EAAO,KACPI,EAAO,KACPH,EAAM,KACN/C,EAAQ,KAWZ,OAViB,IAAbiD,EAAEX,SACFQ,EAAOG,EAAC,KACRC,EAAOD,EAAC,KACuB,IAA3BA,EAAC,WAAeX,SAChBS,EAAG,UAAMtD,EAAWwD,EAAC,WAAe,GAAhB,WAAjB,cAAuDxD,EAAWwD,EAAC,WAAe,GAAhB,UAC1B,IAAvCA,EAAC,WAAe,GAAhB,MAA4BX,SAC5BtC,EAAQD,EAAYkD,EAAC,WAAe,GAAhB,MAA4B,OAKxD,+BACCH,EAAS,6BAAKA,IAAiB,uBAC/BI,EAAS,6BAAKjD,EAAmBiD,KAAkB,uBACnDH,EAAQ,6BAAKA,IAAgB,uBAC7B/C,EAAU,6BAAKA,IAAkB,yBAJlC,sBAAwB7E,EAAxB,YAAgCkH,YAUxB,IAAvB9G,EAAY+G,OAAgB,qEAAgD,gCCxL3FjD,G,OAAQ,IAAIC,MAAOC,cAAcC,MAAM,KAAK,IAE5CC,EAAa,SAACtE,GAEhB,OADQ,IAAImE,KAAKnE,GACRuE,mBAAmBC,UAAUC,SAAU,CAC5CC,KAAM,UACNC,OAAO,aAITC,EAAc,SAACC,GACjB,MAAM,GAAN,OAAUA,EAAK,KAAf,YAA2BA,EAAK,KAAhC,wBAAwDA,EAAK,aAG3DC,EAAqB,SAACC,GACxB,IAAIC,EAAa7D,SAAS8D,cAAc,KAExC,OADAD,EAAWE,UAAYH,EAChBC,EAAWG,WA2UP6C,EAxUO,SAACxH,GACnB,MAAwBC,oBAAS,WAC7B,IAAMwH,EAAUC,aAAaC,QAAQ,QACrC,OAAGF,EACQG,KAAKC,MAAMJ,GAASjI,KAExBQ,EAAMR,QALjB,mBAAOA,EAAP,KAAaqF,EAAb,KAOA,EAA8B5E,mBAAS,IAAvC,mBAAO6E,EAAP,KAAgBC,EAAhB,KACA,EAA8B9E,mBAAS,IAAvC,mBAAO+E,EAAP,KAAgBC,EAAhB,KACA,EAAsChF,mBAAS,IAA/C,mBAAOL,EAAP,KAAoBsF,EAApB,KACA,EAA0BjF,mBAAS,GAAnC,mBAAO6H,EAAP,KAAcC,EAAd,KAX6B,SA0GdC,EA1Gc,8EA0G7B,WAAyBC,GAAzB,eAAA9C,EAAA,yDACsB,OAAfnF,EAAMkI,KADb,iDAKUrI,EAAYoI,EAAQpE,MAAM,KAAK,GALzC,KAMWhE,EANX,OAOa,YAPb,OAgBa,YAhBb,OAyBa,gBAzBb,+BAQYmB,EAASmH,WAAWnI,EAAMkI,KAAKlJ,SAAUQ,EAAMsF,EAAQmD,EAAQA,EAAQtB,OAAO,KACrE1F,MAAK,SAACC,GACHoE,QAAQC,IAAIrE,EAASkH,WAExB/G,OAAM,SAACC,GACJgE,QAAQC,IAAIjE,MAbpC,mCAiBYN,EAASqH,WAAWrI,EAAMkI,KAAKlJ,SAAUQ,EAAMwF,EAAQiD,EAAQA,EAAQtB,OAAO,KACrE1F,MAAK,SAACC,GACHoE,QAAQC,IAAIrE,EAASkH,WAExB/G,OAAM,SAACC,GACJgE,QAAQC,IAAIjE,MAtBpC,oCA0BYN,EAASsH,gBAAgBtI,EAAMkI,KAAKlJ,SAAUQ,EAAMI,EAAYqI,EAAQA,EAAQtB,OAAO,KAC9E1F,MAAK,SAACC,GACHoE,QAAQC,IAAIrE,EAASkH,WAExB/G,OAAM,SAACC,GACJgE,QAAQC,IAAIjE,MA/BpC,oCAmCYgE,QAAQC,IAAI,sBAnCxB,6BAuCIwC,EAASD,EAAM,GAvCnB,6CA1G6B,kEAoJ7B,WAAyBS,GAAzB,SAAApD,EAAA,sDACInF,EAAM4F,aAAa2C,GACnBvI,EAAMmB,QAAQC,KAAK,cAFvB,4CApJ6B,sBAyJ7B,OAnIAV,qBAAU,WAAM,4CAEZ,sBAAAyE,EAAA,+EACWnE,EAASoE,UAAU5F,GACrByB,MAAK,SAACC,GACH,IAAMmE,EAASnE,EAASM,KACxB,MAAO,CAACsD,QAASO,EAAM,QAAaL,QAASK,EAAM,QAAN,MAA4BzF,YAAayF,EAAM,YAAN,UAEzFhE,OAAM,SAACC,GAEJ,OADAgE,QAAQC,IAAIjE,GACL,CAACwD,QAAS,GAAIE,QAAS,GAAIpF,YAAa,QAR3D,4CAFY,kEAeZ,WAAyB4I,GAAzB,qBAAArD,EAAA,6DACUL,EAAU0D,EAAO1D,QACjBE,EAAUwD,EAAOxD,QACjBpF,EAAc4I,EAAO5I,YAErB6I,EAAiB,SAACC,EAAOC,GAC3B,IAAIC,GAAM,EACV,IAAI,IAAIC,KAAKF,EACT,GAAGD,IAAUC,EAAOE,GAAI,CACpBD,GAAM,EACN,MAGR,OAAOA,GAbf,kBAiBW5H,EAAS8H,aAAa9I,EAAMkI,KAAKlJ,SAAUQ,GAC7CyB,MAAK,SAACC,GACH,IAAM6H,EAAO7H,EAASM,KAChBwH,EAAgB,GAChBC,EAAgB,GAChBC,EAAoB,GAE1B,IAAI,IAAIL,KAAKE,EAAM,CAEf,IAAI/G,EAAO+G,EAAKF,GAAL,KACPM,EAAMJ,EAAKF,GAAL,KAEE,YAAT7G,EACCgH,EAAc5H,KAAK+H,EAAG,QACP,YAATnH,EACNiH,EAAc7H,KAAK+H,EAAG,MACP,gBAATnH,GACNkH,EAAkB9H,KAAK+H,EAAG,MAIlC,IAAMC,EAAatE,EAAQuE,QAAO,SAAC5C,GAC/B,OAAOgC,EAAehC,EAAC,OAAYuC,MAEvCjE,EAAWqE,GAEX,IAAME,EAAatE,EAAQqE,QAAO,SAACnC,GAC/B,OAAOuB,EAAevB,EAAC,KAAU+B,MAErChE,EAAWqE,GAEX,IAAMC,EAAiB3J,EAAYyJ,QAAO,SAAC/B,GACvC,OAAOmB,EAAenB,EAAC,KAAU4B,MAErChE,EAAeqE,MAElBlI,OAAM,SAACC,GACJgE,QAAQC,IAAIjE,GACZyD,EAAWD,GACXG,EAAWD,GACXE,EAAetF,OAzD3B,4CAfY,kEA4EZ4F,GAAevE,MAAK,SAACwE,IA5ET,4CA6ER+D,CAAU/D,GAAIxE,MAAK,kBAAMqE,QAAQC,IAAI,eAAa,SAACG,GAAD,OAASJ,QAAQC,IAAIG,SACxE,SAACA,GACAJ,QAAQC,IAAIG,QAElB,CAAClG,EAAKsI,IAmDJ,eAACrG,EAAA,EAAD,WACI,wCAAWzB,EAAMkI,KAAKlJ,SAAtB,OACA,+KACA,uKACA,4BAAG,cAACyD,EAAA,EAAD,CAAQE,QAAS,kBA9JC,2CA8JK8G,CAAUjK,GAAMyB,MAAK,kBAAMqE,QAAQC,IAAI,cAAY,SAACG,GAAD,OAASJ,QAAQC,IAAIG,OAA/F,4BAEH,cAAChE,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOC,UAAU,eAAvC,UACI,cAACH,EAAA,EAAKI,MAAN,qHACA,cAACJ,EAAA,EAAKK,QAAN,CACIH,UAAU,UACVI,KAAK,OACLE,MAAO1C,EACP2C,SA1JC,SAACC,GAClB,IAAM5C,EAAO4C,EAAEC,OAAOH,MAChByD,EAAU,IAAIhC,KAAKnE,GAAMoE,cAAcC,MAAM,KAAK,GACxDgB,EAAQc,GACR3F,EAAM4F,aAAaD,IAuJHE,IAAKnC,EACLoC,UAAQ,SAKpB,eAACC,EAAA,EAAD,CAAMC,iBAAiB,SAAS5C,GAAG,cAAnC,UACI,eAAC6C,EAAA,EAAD,CAAKC,SAAS,SAAStF,MAAM,SAA7B,UACI,eAACuF,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACI,gCACI,+BACI,uDACA,wCACA,uCACA,0CACA,8CAGR,gCACKzB,EAAQ0B,KAAI,SAACC,EAAGC,GACb,GAAiB,IAAbD,EAAEE,OAAc,CAChB,IAAMC,EAAoB,IAAIjD,KAAK8C,EAAC,mBAAuBI,eAAe7C,UAAUC,SAAU,CAC1F6C,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,YAET,OACI,+BACI,6BAAKL,IACL,6BAAKH,EAAC,SACN,6BAAKnC,EAAmBmC,EAAC,SACzB,6BAAKA,EAAC,WACN,oBAAI7E,UAAU,eAAd,SACI,cAACa,EAAA,EAAD,CACIC,QAAQ,SACRgH,KAAK,KACL,aAAW,UACX/G,QAAS,WACLqF,EAAU,WAAD,OAAYxI,EAAZ,YAAoBkH,IAASzF,MAAK,kBAAMqE,QAAQC,IAAI,eAAa,SAACG,GAAD,OAASJ,QAAQC,IAAIG,OALvG,mBANR,kBAAoBlG,EAApB,YAA4BkH,IAkBhC,OACI,wCAAoBlH,EAApB,YAA4BkH,YAM5B,IAAnB5B,EAAQ6B,OAAgB,gEAA2C,yBAExE,eAACV,EAAA,EAAD,CAAKC,SAAS,UAAUtF,MAAM,UAA9B,UACI,eAACuF,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACI,gCACI,+BACI,uEACA,qCACA,uCACA,8CAGR,gCACKvB,EAAQwB,KAAI,SAACU,EAAGR,GAEb,IAAIS,EAAO,KACPC,EAAM,KACN/C,EAAQ,KAUZ,OATiB,IAAb6C,EAAEP,SACFQ,EAAOD,EAAC,KAASG,QAAQ,KAAK,MAAMA,QAAQ,MAAM,KAAKA,QAAQ,IAAI,MAAMA,QAAQ,KAAK,IACvD,IAA3BH,EAAC,WAAeP,SAChBS,EAAG,UAAMtD,EAAWoD,EAAC,WAAe,GAAhB,WAAjB,cAAuDpD,EAAWoD,EAAC,WAAe,GAAhB,UAC1B,IAAvCA,EAAC,WAAe,GAAhB,MAA4BP,SAC5BtC,EAAQD,EAAY8C,EAAC,WAAe,GAAhB,MAA4B,OAKxD,+BACKC,EAAS,6BAAKA,IAAiB,uBAC/BC,EAAQ,6BAAKA,IAAgB,uBAC7B/C,EAAU,6BAAKA,IAAkB,uBACjC8C,EACD,oBAAIvF,UAAU,eAAd,SACI,cAACa,EAAA,EAAD,CACIC,QAAQ,SACRgH,KAAK,KACL,aAAW,UACX/G,QAAS,WACLqF,EAAU,WAAD,OAAYxI,EAAZ,YAAoBkH,IAASzF,MAAK,kBAAMqE,QAAQC,IAAI,eAAa,SAACG,GAAD,OAASJ,QAAQC,IAAIG,OALvG,iBAQQ,yBAdhB,kBAAoBlG,EAApB,YAA4BkH,YAoBxB,IAAnB1B,EAAQ2B,OAAgB,iEAA4C,yBAEzE,eAACV,EAAA,EAAD,CAAKC,SAAS,cAActF,MAAM,cAAlC,UACI,eAACuF,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACI,gCACI,+BACI,sCACA,sCACA,qCACA,uCACA,8CAGR,gCACK3G,EAAY4G,KAAI,SAACc,EAAGZ,GAEjB,IAAIS,EAAO,KACPI,EAAO,KACPH,EAAM,KACN/C,EAAQ,KAWZ,OAViB,IAAbiD,EAAEX,SACFQ,EAAOG,EAAC,KACRC,EAAOD,EAAC,KACuB,IAA3BA,EAAC,WAAeX,SAChBS,EAAG,UAAMtD,EAAWwD,EAAC,WAAe,GAAhB,WAAjB,cAAuDxD,EAAWwD,EAAC,WAAe,GAAhB,UAC1B,IAAvCA,EAAC,WAAe,GAAhB,MAA4BX,SAC5BtC,EAAQD,EAAYkD,EAAC,WAAe,GAAhB,MAA4B,OAKxD,+BACKH,EAAS,6BAAKA,IAAiB,uBAC/BI,EAAS,6BAAKjD,EAAmBiD,KAAkB,uBACnDH,EAAQ,6BAAKA,IAAgB,uBAC7B/C,EAAU,6BAAKA,IAAkB,uBACjC8C,EACD,oBAAIvF,UAAU,eAAd,SACI,cAACa,EAAA,EAAD,CACIC,QAAQ,SACRgH,KAAK,KACL,aAAW,UACX/G,QAAS,WACLqF,EAAU,eAAD,OAAgBxI,EAAhB,YAAwBkH,IAASzF,MAAK,kBAAMqE,QAAQC,IAAI,eAAa,SAACG,GAAD,OAASJ,QAAQC,IAAIG,OAL3G,iBAQQ,yBAfhB,sBAAwBlG,EAAxB,YAAgCkH,YAqBxB,IAAvB9G,EAAY+G,OAAgB,qEAAgD,gCCtV3F7C,EAAa,SAACtE,GAEhB,OADQ,IAAImE,KAAKnE,GACRuE,mBAAmBC,UAAUC,SAAU,CAC5CC,KAAM,UACNC,OAAO,aAITC,EAAc,SAACC,GACjB,MAAM,GAAN,OAAUA,EAAK,KAAf,YAA2BA,EAAK,KAAhC,wBAAwDA,EAAK,aAG3DC,EAAqB,SAACC,GACxB,IAAIC,EAAa7D,SAAS8D,cAAc,KAExC,OADAD,EAAWE,UAAYH,EAChBC,EAAWG,WA8PPgF,EA3PK,SAAC3J,GACjB,MAAwBC,oBAAS,WAC7B,IAAMwH,EAAUC,aAAaC,QAAQ,QACrC,OAAGF,EACQG,KAAKC,MAAMJ,GAASjI,KAExBQ,EAAMR,QALjB,mBAAOA,EAAP,KAOA,GAPA,KAO8BS,mBAAS,KAAvC,mBAAO6E,EAAP,KAAgBC,EAAhB,KACA,EAA8B9E,mBAAS,IAAvC,mBAAO+E,EAAP,KAAgBC,EAAhB,KACA,EAAsChF,mBAAS,IAA/C,mBAAOL,EAAP,KAAoBsF,EAApB,KACA,EAA8BjF,mBAAS,GAAvC,mBAAO2J,EAAP,KAAgBC,EAAhB,KAX2B,SAoDZC,EApDY,8EAoD3B,WAA2B7B,GAA3B,iBAAA9C,EAAA,yDACsB,OAAfnF,EAAMkI,KADb,iDAKUrI,EAAYoI,EAAQpE,MAAM,KAAK,GAEjC/D,EAAQ,KAPhB,KAQWD,EARX,OASa,YATb,OAYa,YAZb,OAea,gBAfb,+BAUYC,EAAQgF,EAAQmD,EAAQA,EAAQtB,OAAO,IAVnD,mCAaY7G,EAAQkF,EAAQiD,EAAQA,EAAQtB,OAAO,IAbnD,oCAgBY7G,EAAQF,EAAYqI,EAAQA,EAAQtB,OAAO,IAhBvD,oCAmBYrB,QAAQC,IAAI,sBAnBxB,6BAsBIvE,EAAS+I,YAAY/J,EAAMkI,KAAKlJ,SAAUQ,EAAMK,EAAWC,GAClDmB,MAAK,SAACC,GACHoE,QAAQC,IAAIrE,EAASkH,WAExB/G,OAAM,SAACC,GACJgE,QAAQC,IAAIjE,MAGxBuI,EAAWD,EAAQ,GA9BvB,6CApD2B,kEAqF3B,sBAAAzE,EAAA,sDACInF,EAAM4F,aAAapG,GACnBQ,EAAMmB,QAAQC,KAAK,KAFvB,4CArF2B,sBA0F3B,OA7EAV,qBAAU,WAAM,4CACZ,sBAAAyE,EAAA,+EACWnE,EAAS8H,aAAa9I,EAAMkI,KAAKlJ,SAAUQ,GACzCyB,MAAK,SAACC,GACH,IAAM6H,EAAO7H,EAASM,KAChBsD,EAAU,GACVE,EAAU,GACVpF,EAAc,GAEpB,IAAI,IAAIiJ,KAAKE,EAAM,CAEf,IAAI/G,EAAO+G,EAAKF,GAAL,KACPM,EAAMJ,EAAKF,GAAL,KAEE,YAAT7G,EACC8C,EAAQ1D,KAAK+H,GACE,YAATnH,EACNgD,EAAQ5D,KAAK+H,GACE,gBAATnH,GACNpC,EAAYwB,KAAK+H,GAIzBpE,EAAWD,GACXG,EAAWD,GACXE,EAAetF,MAElByB,OAAM,SAACC,GACJgE,QAAQC,IAAIjE,GACZyD,EAAW,IACXE,EAAW,IACXC,EAAe,QA9B/B,4CADY,uBAAC,WAAD,gCAmCZsE,GAAYvI,MAAK,kBAAMqE,QAAQC,IAAI,eAAa,SAACG,GAAD,OAASJ,QAAQC,IAAIG,QACvE,CAACkE,IA0CC,eAACnI,EAAA,EAAD,WACI,wCAAWzB,EAAMkI,KAAKlJ,SAAtB,OACA,8JACA,qJACA,4BAAG,cAACyD,EAAA,EAAD,CAAQE,QAAS,kBA/FD,0CA+FOqH,GAAS/I,MAAK,kBAAMqE,QAAQC,IAAI,WAAS,SAACG,GAAD,OAASJ,QAAQC,IAAIG,OAArF,oBAEH,eAACK,EAAA,EAAD,CAAMC,iBAAiB,SAAS5C,GAAG,cAAnC,UACI,eAAC6C,EAAA,EAAD,CAAKC,SAAS,SAAStF,MAAM,SAA7B,UACI,eAACuF,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACI,gCACI,+BACI,uDACA,wCACA,uCACA,0CACA,8CAGR,gCACKzB,EAAQ0B,KAAI,SAACC,EAAGC,GACb,GAAiB,IAAbD,EAAEE,OAAc,CAChB,IAAMC,EAAoB,IAAIjD,KAAK8C,EAAC,mBAAuBI,eAAe7C,UAAUC,SAAU,CAC1F6C,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,YAET,OACI,+BACI,6BAAKL,IACL,6BAAKH,EAAC,SACN,6BAAKnC,EAAmBmC,EAAC,SACzB,6BAAKA,EAAC,WACN,oBAAI7E,UAAU,eAAd,SACI,cAACa,EAAA,EAAD,CACIC,QAAQ,UACRgH,KAAK,KACL,aAAW,UACX/G,QAAS,WACLmH,EAAY,WAAD,OAAYtK,EAAZ,YAAoBkH,IAASzF,MAAK,kBAAMqE,QAAQC,IAAI,mBAAiB,SAACG,GAAD,OAASJ,QAAQC,IAAIG,OAL7G,mBANR,iBAAmBlG,EAAnB,YAA2BkH,IAkB/B,OACI,uCAAmBlH,EAAnB,YAA2BkH,YAM3B,IAAnB5B,EAAQ6B,OAAgB,gEAA2C,yBAExE,eAACV,EAAA,EAAD,CAAKC,SAAS,UAAUtF,MAAM,UAA9B,UACI,eAACuF,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACI,gCACI,+BACI,uEACA,qCACA,uCACA,8CAGR,gCACKvB,EAAQwB,KAAI,SAACU,EAAGR,GAEb,IAAIS,EAAO,KACPC,EAAM,KACN/C,EAAQ,KAUZ,OATiB,IAAb6C,EAAEP,SACFQ,EAAOD,EAAC,KAASG,QAAQ,KAAK,MAAMA,QAAQ,MAAM,KAAKA,QAAQ,IAAI,MAAMA,QAAQ,KAAK,IACvD,IAA3BH,EAAC,WAAeP,SAChBS,EAAG,UAAMtD,EAAWoD,EAAC,WAAe,GAAhB,WAAjB,cAAuDpD,EAAWoD,EAAC,WAAe,GAAhB,UAC1B,IAAvCA,EAAC,WAAe,GAAhB,MAA4BP,SAC5BtC,EAAQD,EAAY8C,EAAC,WAAe,GAAhB,MAA4B,OAKxD,+BACKC,EAAS,6BAAKA,IAAiB,uBAC/BC,EAAQ,6BAAKA,IAAgB,uBAC7B/C,EAAU,6BAAKA,IAAkB,uBACjC8C,EACD,oBAAIvF,UAAU,eAAd,SACI,cAACa,EAAA,EAAD,CACIC,QAAQ,UACRgH,KAAK,KACL,aAAW,UACX/G,QAAS,WACLmH,EAAY,WAAD,OAAYtK,EAAZ,YAAoBkH,IAASzF,MAAK,kBAAMqE,QAAQC,IAAI,mBAAiB,SAACG,GAAD,OAASJ,QAAQC,IAAIG,OAL7G,iBAQQ,yBAdhB,iBAAmBlG,EAAnB,YAA2BkH,YAoBvB,IAAnB1B,EAAQ2B,OAAgB,iEAA4C,yBAEzE,eAACV,EAAA,EAAD,CAAKC,SAAS,cAActF,MAAM,cAAlC,UACI,eAACuF,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACI,gCACI,+BACI,sCACA,sCACA,qCACA,uCACA,8CAGR,gCACK3G,EAAY4G,KAAI,SAACc,EAAGZ,GAEjB,IAAIS,EAAO,KACPI,EAAO,KACPH,EAAM,KACN/C,EAAQ,KAWZ,OAViB,IAAbiD,EAAEX,SACFQ,EAAOG,EAAC,KACRC,EAAOD,EAAC,KACuB,IAA3BA,EAAC,WAAeX,SAChBS,EAAG,UAAMtD,EAAWwD,EAAC,WAAe,GAAhB,WAAjB,cAAuDxD,EAAWwD,EAAC,WAAe,GAAhB,UAC1B,IAAvCA,EAAC,WAAe,GAAhB,MAA4BX,SAC5BtC,EAAQD,EAAYkD,EAAC,WAAe,GAAhB,MAA4B,OAKxD,+BACKH,EAAS,6BAAKA,IAAiB,uBAC/BI,EAAS,6BAAKjD,EAAmBiD,KAAkB,uBACnDH,EAAQ,6BAAKA,IAAgB,uBAC7B/C,EAAU,6BAAKA,IAAkB,uBACjC8C,EACD,oBAAIvF,UAAU,eAAd,SACI,cAACa,EAAA,EAAD,CACIC,QAAQ,UACRgH,KAAK,KACL,aAAW,UACX/G,QAAS,WACLmH,EAAY,eAAD,OAAgBtK,EAAhB,YAAwBkH,IAASzF,MAAK,kBAAMqE,QAAQC,IAAI,mBAAiB,SAACG,GAAD,OAASJ,QAAQC,IAAIG,OALjH,iBAQQ,yBAfhB,sBAAwBlG,EAAxB,YAAgCkH,YAqBxB,IAAvB9G,EAAY+G,OAAgB,qEAAgD,gCC7P3FjD,GAAQ,IAAIC,MAAOC,cAAcC,MAAM,KAAK,GAsFnCoG,MApFf,WACI,MAAwBhK,oBAAS,WAC7B,IAAMiK,EAAexC,aAAaC,QAAQ,QAC1C,OAAGuC,EACQtC,KAAKC,MAAMqC,GAEf,QALX,mBAAOhC,EAAP,KAAaiC,EAAb,KAOA,EAAwBlK,mBAASyD,GAAjC,mBAAOlE,EAAP,KAAaqF,EAAb,KARW,SAUI9D,IAVJ,2EAUX,wCAAAoE,EAAA,sDAAqB+C,EAArB,+BAA4B,KACxBiC,EAAQjC,GACRR,aAAa0C,QAAQ,OAAQxC,KAAKyC,UAAUnC,IAFhD,4CAVW,kEAeX,sBAAA/C,EAAA,sDACIgF,EAAQ,MACRzC,aAAa4C,QAFjB,4CAfW,+BAoBI1E,EApBJ,8EAoBX,WAA4B2C,GAA5B,SAAApD,EAAA,sDACIN,EAAQ0D,GACRb,aAAa0C,QAAQ,OAAQxC,KAAKyC,UAAU,CAAC7K,KAAM+I,KAFvD,4CApBW,sBAiCX,OARA7H,qBAAU,WAEFC,SAASC,MADVsH,EACC,4BAAsCA,EAAKlJ,SAA3C,mBAEiB,mCAEtB,CAACkJ,IAGA,sBAAKtG,UAAU,MAAM2I,KAAK,OAA1B,UACI,cAACC,EAAA,EAAD,CAAQC,OAAO,KAAKC,GAAG,QAAQhI,QAAQ,QAAvC,SACI,eAACjB,EAAA,EAAD,WACI,cAAC+I,EAAA,EAAOG,MAAR,CAAcC,KAAK,+CAAnB,0BACA,cAACJ,EAAA,EAAOK,OAAR,CAAe,gBAAc,0BAC7B,eAACL,EAAA,EAAOM,SAAR,CAAiB1H,GAAG,wBAApB,UACI,cAAC2H,EAAA,EAAD,CAAKnJ,UAAU,UAAf,SACMsG,EACE,eAACsC,EAAA,EAAOQ,KAAR,mCAAmC9C,EAAKlJ,YAExC,cAAC,IAAD,CAAMiM,GAAI,UAAWrJ,UAAU,UAA/B,0BAGR,cAACmJ,EAAA,EAAD,UACM7C,EACE,cAAC6C,EAAA,EAAIG,KAAL,CAAUvI,QAjD3B,2CAiD4CiI,KAAM,+CAAjC,kBAEA,cAAC,IAAD,CAAMK,GAAI,SAAUrJ,UAAU,UAA9B,8BAOpB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuJ,OAAK,EAACC,KAAK,IAAIC,OAAS,SAACrL,GAAD,OAE3BkI,EAAQ,cAAC,EAAD,2BAAmBlI,GAAnB,IAA0BkI,KAAMA,EAAM1I,KAAMA,EAAMoG,aAAcA,KAChE,cAAC,EAAD,2BAAY5F,GAAZ,IAAmB4F,aAAcA,QAG7C,cAAC,IAAD,CAAOwF,KAAK,SAASC,OAAS,SAACrL,GAAD,OAC1B,cAAC,EAAD,2BAAWA,GAAX,IAAkBe,MAAOA,QAG7B,cAAC,IAAD,CAAOqK,KAAK,UAAUC,OAAS,SAACrL,GAAD,OAC3B,cAAC,EAAD,2BAAYA,GAAZ,IAAmBe,MAAOA,QAG9B,cAAC,IAAD,CAAOqK,KAAK,aAAaC,OAAS,SAACrL,GAAD,OAE9BkI,EAAQ,cAAC,EAAD,2BAAiBlI,GAAjB,IAAwBkI,KAAMA,EAAM1I,KAAMA,EAAMoG,aAAcA,KAC9D,cAAC,EAAD,2BAAY5F,GAAZ,IAAmB4F,aAAcA,eC7F7DjF,SAAS2K,gBAAgBC,KAAO,KAEhCC,IAASH,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEF1K,SAAS8K,eAAe,U","file":"static/js/main.879135af.chunk.js","sourcesContent":["const axios = require('axios')\r\nconst CryptoJS = require('crypto-js')\r\n\r\nclass Services {\r\n    login(username, password) {\r\n        const cipherText = CryptoJS.AES.encrypt(password, 'chiaveSegreta').toString()\r\n        return axios.post('https://enigmatic-citadel-68348.herokuapp.com/api/users/', {username: username, password: (!password ? \"\" : cipherText)})\r\n    }\r\n\r\n    signup(username, password) {\r\n        const cipherText = CryptoJS.AES.encrypt(password, 'chiaveSegreta').toString()\r\n        return axios.put(`https://enigmatic-citadel-68348.herokuapp.com/api/users/${username}`, {password: (!password ? \"\" : cipherText)})\r\n    }\r\n\r\n    getEvents(date) {\r\n        return axios.get(`https://enigmatic-citadel-68348.herokuapp.com/api/events/${date}`)\r\n    }\r\n\r\n    hideNotice(username, date, notice) {\r\n        return axios.post('https://enigmatic-citadel-68348.herokuapp.com/api/notices/', {username: username, date: date, notice: notice})\r\n    }\r\n\r\n    hideLesson(username, date, lesson) {\r\n        return axios.post('https://enigmatic-citadel-68348.herokuapp.com/api/lessons/', {username: username, date: date, lesson: lesson})\r\n    }\r\n\r\n    hideOfficehours(username, date, officehours) {\r\n        return axios.post('https://enigmatic-citadel-68348.herokuapp.com/api/officehours/', {username: username, date: date, officehours: officehours})\r\n    }\r\n\r\n    getHidedInfo(username, date) {\r\n        return axios.get(`https://enigmatic-citadel-68348.herokuapp.com/api/users/${username}/events/${date}`)\r\n    }\r\n\r\n    removeEvent(username, date, eventType, event) {\r\n        return axios.post('https://enigmatic-citadel-68348.herokuapp.com/api/events/', {username: username, date: date, eventType: eventType, event: event})\r\n    }\r\n\r\n}\r\n\r\nexport default new Services()\r\n","import React, { useEffect, useRef, useState } from \"react\"\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nimport Services from '../services'\n\nconst Login = (props) => {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const [show, setShow] = useState(false)\n    const [body, setBody] = useState(\"\")\n\n    const editFieldRef = useRef(null)\n\n    useEffect(() => {\n        document.title = \"Login - Eventi UniVR\"\n        editFieldRef.current.focus()\n    }, [])\n\n    const onChangeUsername = (e) => {\n        const username = e.target.value\n        setUsername(username)\n    }\n\n    const onChangePassword = (e) => {\n        const password = e.target.value\n        setPassword(password)\n    }\n\n    const handleClose = () => {\n        //setUsername(\"\")\n        setPassword(\"\")\n        setShow(false)\n    }\n\n    const handleShow = (b) => {\n        setBody(b)\n        setShow(true)\n    }\n\n    const login = () => {\n        Services.login(username, password)\n                .then((response) => { //codice 200\n                    props.login({username: username, password: password}) //si riferisce alla funzione omonima in App\n                    props.history.push('/') //torna alla home\n                })\n                .catch((error) => { //codice 400\n                    handleShow(error.response.data.error)\n                })\n    }\n\n    return(\n        <Container>\n            <h1>Benvenuto nella pagina di login!</h1>\n            <Form>\n                <Form.Group className=\"mb-3\" controlId=\"formUsername\">\n                    <Form.Label>Inserisci il tuo username:</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        value={username}\n                        onChange={onChangeUsername}\n                        ref={editFieldRef}\n                        aria-required=\"true\"\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formPassword\">\n                    <Form.Label>Inserisci la tua password:</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={onChangePassword}\n                        aria-required=\"true\"\n                        onKeyPress={(event) => {\n                            if(event.key === \"Enter\") {\n                                login()\n                            }\n                        }}\n                    />\n                </Form.Group>\n                <Button variant=\"primary\" onClick={login}>\n                    Invia\n                </Button>\n            </Form>\n\n            <Modal\n                show={show}\n                onHide={handleClose}\n                autoFocus\n                aria-labelledby=\"modal-body\"\n            >\n                <Modal.Header closeButton closeLabel=\"Chiudi\">\n                    <Modal.Title>Attenzione!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body id=\"modal-body\">{body}</Modal.Body>\n            </Modal>\n        </Container>\n    )\n}\n\nexport default Login\n","import React, { useEffect, useRef, useState } from \"react\"\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nimport Services from '../services'\n\nconst SignUp = (props) => {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\n\n    const [show, setShow] = useState(false)\n    const [body, setBody] = useState(\"\")\n\n    const editFieldRef = useRef(null)\n\n    useEffect(() => {\n        document.title = \"Registrazione - Eventi UniVR\"\n        editFieldRef.current.focus()\n    }, [])\n\n    const onChangeUsername = (e) => {\n        const username = e.target.value\n        setUsername(username)\n    }\n\n    const onChangePassword = (e) => {\n        const password = e.target.value\n        setPassword(password)\n    }\n\n    const onChangePasswordConfirm = (e) => {\n        const password = e.target.value\n        setPasswordConfirm(password)\n    }\n\n    const handleClose = () => {\n        //setUsername(\"\")\n        //setPassword(\"\")\n        setPasswordConfirm(\"\")\n        setShow(false)\n    }\n\n    const handleShow = (b) => {\n        setBody(b)\n        setShow(true)\n    }\n\n    const signup = () => {\n        if(username && password && passwordConfirm && password === passwordConfirm) {\n            Services.signup(username, password)\n                .then((response) => { //codice 201\n                    props.login({username: username, password: password}) //si riferisce alla funzione omonima in App\n                    props.history.push('/') //torna alla home\n                })\n                .catch((error) => { //codice 400\n                    handleShow(error.response.data.error)\n                })\n        } else {\n            if(password && passwordConfirm && password !== passwordConfirm) {\n                handleShow(\"Hai inserito due password diverse.\")\n            } else {\n                handleShow(\"Compilare tutti i campi.\")\n            }\n        }\n    }\n\n    return(\n        <Container>\n            <h1>Benvenuto nella pagina di registrazione!</h1>\n            <Form>\n                <Form.Group className=\"mb-3\" controlId=\"formUsername\">\n                    <Form.Label>Scegli il tuo username:</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        value={username}\n                        onChange={onChangeUsername}\n                        ref={editFieldRef}\n                        aria-required=\"true\"\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formPassword\">\n                    <Form.Label>Scegli la tua password:</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={onChangePassword}\n                        aria-required=\"true\"\n                    />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formPasswordCheck\">\n                    <Form.Label>Conferma la tua password:</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Conferma password\"\n                        value={passwordConfirm}\n                        onChange={onChangePasswordConfirm}\n                        aria-required=\"true\"\n                        onKeyPress={(event) => {\n                            if(event.key === \"Enter\") {\n                                signup()\n                            }\n                        }}\n                    />\n                </Form.Group>\n                <Button variant=\"primary\" onClick={signup}>\n                    Invia\n                </Button>\n            </Form>\n\n            <Modal\n                show={show}\n                onHide={handleClose}\n                autoFocus\n                aria-labelledby=\"modal-body\"\n            >\n                <Modal.Header closeButton closeLabel=\"Chiudi\">\n                    <Modal.Title>Attenzione!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body id=\"modal-body\">{body}</Modal.Body>\n            </Modal>\n        </Container>\n    )\n}\n\nexport default SignUp\n","import React, { useEffect, useState } from \"react\"\r\nimport Container from 'react-bootstrap/Container'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\n\r\nimport Services from '../services'\r\n\r\nconst today = new Date().toISOString().split('T')[0]\r\n\r\nconst prettyTime = (date) => {\r\n    var d = new Date(date)\r\n    return d.toLocaleTimeString(navigator.language, {\r\n        hour: '2-digit',\r\n        minute:'2-digit'\r\n    })\r\n}\r\n\r\nconst prettyLuogo = (luogo) => {\r\n    return `${luogo[\"tipo\"]} ${luogo[\"nome\"]}, Ca' Vignal ${luogo[\"idEdificio\"]}`\r\n}\r\n\r\nconst convertToPlainText = (html) => {\r\n    var tmpElement = document.createElement('p')\r\n    tmpElement.innerHTML = html\r\n    return tmpElement.innerText\r\n}\r\n\r\nconst Events = (props) => {\r\n    const [date, setDate] = useState(today)\r\n    const [notices, setNotices] = useState([]) //corrispondono ai rispettivi array presenti nei dati json (all'inizio sono vuoti)\r\n    const [lessons, setLessons] = useState([])\r\n    const [officehours, setOfficehours] = useState([])\r\n\r\n    const onChangeDate = (e) => {\r\n        const date = e.target.value\r\n        const newDate = new Date(date).toISOString().split('T')[0]\r\n        setDate(newDate)\r\n        props.selectedDate(newDate) //salvo la nuova data anche in memoria\r\n    }\r\n\r\n    //quando renderizzo la pagina mostro gli eventi relativi alla data corrente\r\n    //quando il campo date cambia mostro gli eventi relativi a quella data\r\n    useEffect(() => {\r\n        //funzione che recupera i dati dal sito dell'applicazione web degli eventi\r\n        async function retrieveData() {\r\n            return Services.getEvents(date)\r\n                .then((response) => {\r\n                    const events = response.data\r\n                    return {notices: events[\"notices\"], lessons: events[\"lessons\"][\"value\"], officehours: events[\"officehours\"][\"value\"]}\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                    return {notices: [], lessons: [], officehours: []}\r\n                })\r\n        }\r\n\r\n        retrieveData().then((ev) => {\r\n            setNotices(ev.notices)\r\n            setLessons(ev.lessons)\r\n            setOfficehours(ev.officehours)\r\n        }, (err) => {\r\n            console.log(err)\r\n        })\r\n    },[date])\r\n\r\n    return (\r\n        <Container>\r\n            <h1>Ciao!</h1>\r\n            <p>Se vuoi personalizzare questa pagina clicca su 'Registrati' oppure 'Accedi' se ti sei già iscritto a questa applicazione.</p>\r\n            \r\n            <Form.Group className=\"mb-3\" controlId=\"formCalendar\">\r\n                <Form.Label>Seleziona una data dal calendario sottostante per vedere avvisi, lezioni e ricevimenti di quel giorno:</Form.Label>\r\n                <Form.Control\r\n                    className=\"halfCal\"\r\n                    type=\"date\"\r\n                    value={date}\r\n                    onChange={onChangeDate}\r\n                    max={today}\r\n                    required\r\n                />\r\n            </Form.Group>\r\n            \r\n            <Tabs defaultActiveKey=\"avvisi\" id=\"events-tabs\">\r\n                <Tab eventKey=\"avvisi\" title=\"Avvisi\">\r\n                    <Table striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Data di pubblicazione</th>\r\n                                <th>Titolo</th>\r\n                                <th>Testo</th>\r\n                                <th>Mittenti</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {notices.map((n, index) => {\r\n                                if (n.length !== 0) {\r\n                                    const dataPubblicazione = new Date(n[\"dataPubblicazione\"]).toLocaleString(navigator.language, {\r\n                                        weekday: 'long',\r\n                                        year: 'numeric',\r\n                                        month: 'long',\r\n                                        day: 'numeric'\r\n                                    })\r\n                                    return(\r\n                                        <tr key={`notices-${date}-${index}`}>\r\n                                            <td>{dataPubblicazione}</td>\r\n                                            <td>{n[\"titolo\"]}</td>\r\n                                            <td>{convertToPlainText(n[\"testo\"])}</td>\r\n                                            <td>{n[\"mittenti\"]}</td>\r\n                                        </tr>\r\n                                    )\r\n                                } else {\r\n                                    return(\r\n                                        <tr key={`notices-${date}-${index}`}></tr>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                    {notices.length === 0 ? (<p>Non ci sono avvisi da mostrare!</p>) : (<p></p>)}\r\n                </Tab>\r\n                <Tab eventKey=\"lezioni\" title=\"Lezioni\">\r\n                    <Table striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Insegnamento, Docente, Corso di Studi</th>\r\n                                <th>Ora</th>\r\n                                <th>Luogo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {lessons.map((l, index) => {\r\n                                //calcolo quali informazioni sono disponibili\r\n                                let nome = null\r\n                                let ora = null\r\n                                let luogo = null\r\n                                if (l.length !== 0) {\r\n                                    nome = l[\"nome\"].replace(\"##\",\", \").replace(\"\\\\n\",\" \").replace(\"@\",\", \").replace(\"||\",\"\")\r\n                                    if (l[\"intervallo\"].length !== 0) {\r\n                                        ora = `${prettyTime(l[\"intervallo\"][0][\"oraInizio\"])} - ${prettyTime(l[\"intervallo\"][0][\"oraFine\"])}`\r\n                                        if (l[\"intervallo\"][0][\"luogo\"].length !== 0) {\r\n                                            luogo = prettyLuogo(l[\"intervallo\"][0][\"luogo\"][0])\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return(\r\n                                    <tr key={`lessons-${date}-${index}`}>\r\n                                    {nome ? ( <td>{nome}</td> ) : ( <td></td> )}\r\n                                    {ora ? ( <td>{ora}</td> ) : ( <td></td> )}\r\n                                    {luogo ? ( <td>{luogo}</td> ) : ( <td></td> )}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                    {lessons.length === 0 ? (<p>Non ci sono lezioni da mostrare!</p>) : (<p></p>)}\r\n                </Tab>\r\n                <Tab eventKey=\"ricevimenti\" title=\"Ricevimenti\">\r\n                    <Table striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th>Note</th>\r\n                                <th>Ora</th>\r\n                                <th>Luogo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {officehours.map((o, index) => {\r\n                                //calcolo quali informazioni sono disponibili\r\n                                let nome = null\r\n                                let note = null\r\n                                let ora = null\r\n                                let luogo = null\r\n                                if (o.length !== 0) {\r\n                                    nome = o[\"nome\"]\r\n                                    note = o[\"note\"]\r\n                                    if (o[\"intervallo\"].length !== 0) {\r\n                                        ora = `${prettyTime(o[\"intervallo\"][0][\"oraInizio\"])} - ${prettyTime(o[\"intervallo\"][0][\"oraFine\"])}`\r\n                                        if (o[\"intervallo\"][0][\"luogo\"].length !== 0) {\r\n                                            luogo = prettyLuogo(o[\"intervallo\"][0][\"luogo\"][0])\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return(\r\n                                    <tr key={`officehours-${date}-${index}`}>\r\n                                    {nome ? ( <td>{nome}</td> ) : ( <td></td> )}\r\n                                    {note ? ( <td>{convertToPlainText(note)}</td> ) : ( <td></td> )}\r\n                                    {ora ? ( <td>{ora}</td> ) : ( <td></td> )}\r\n                                    {luogo ? ( <td>{luogo}</td> ) : ( <td></td> )}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                    {officehours.length === 0 ? (<p>Non ci sono ricevimenti da mostrare!</p>) : (<p></p>)}\r\n                </Tab>\r\n            </Tabs>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Events\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Container from 'react-bootstrap/Container'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport Services from '../services'\r\n\r\nimport '../index.css'\r\n\r\nconst today = new Date().toISOString().split('T')[0]\r\n\r\nconst prettyTime = (date) => {\r\n    var d = new Date(date)\r\n    return d.toLocaleTimeString(navigator.language, {\r\n        hour: '2-digit',\r\n        minute:'2-digit'\r\n    })\r\n}\r\n\r\nconst prettyLuogo = (luogo) => {\r\n    return `${luogo[\"tipo\"]} ${luogo[\"nome\"]}, Ca' Vignal ${luogo[\"idEdificio\"]}`\r\n}\r\n\r\nconst convertToPlainText = (html) => {\r\n    var tmpElement = document.createElement('p')\r\n    tmpElement.innerHTML = html\r\n    return tmpElement.innerText\r\n}\r\n\r\nconst EventsRegUser = (props) => {\r\n    const [date, setDate] = useState(() => {\r\n        const selDate = localStorage.getItem('date') //recupero la data in memoria\r\n        if(selDate) {\r\n            return JSON.parse(selDate).date\r\n        }\r\n        return props.date\r\n    })\r\n    const [notices, setNotices] = useState([]) //corrispondono ai rispettivi array presenti nei dati json (all'inizio sono vuoti)\r\n    const [lessons, setLessons] = useState([])\r\n    const [officehours, setOfficehours] = useState([])\r\n    const [hided, setHided] = useState(0)\r\n\r\n    const onChangeDate = (e) => {\r\n        const date = e.target.value\r\n        const newDate = new Date(date).toISOString().split('T')[0]\r\n        setDate(newDate)\r\n        props.selectedDate(newDate) //salvo la nuova data anche in memoria\r\n    }\r\n\r\n    //quando renderizzo la pagina mostro gli eventi relativi alla data corrente\r\n    //quando il campo date cambia mostro gli eventi relativi a quella data\r\n    useEffect(() => {\r\n        //funzione che recupera i dati dal sito dell'applicazione web degli eventi\r\n        async function retrieveData() {\r\n            return Services.getEvents(date)\r\n                .then((response) => {\r\n                    const events = response.data\r\n                    return {notices: events[\"notices\"], lessons: events[\"lessons\"][\"value\"], officehours: events[\"officehours\"][\"value\"]}\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                    return {notices: [], lessons: [], officehours: []}\r\n                })\r\n        }\r\n\r\n        //funzione che controlla se un utente registrato ha espresso la preferenza di rimuovere certi eventi\r\n        async function checkInfo(eventi) {\r\n            const notices = eventi.notices\r\n            const lessons = eventi.lessons\r\n            const officehours = eventi.officehours\r\n\r\n            const diversoDaTutti = (saved, toHide) => {\r\n                let res = true\r\n                for(let i in toHide) {\r\n                    if(saved === toHide[i]) {\r\n                        res = false\r\n                        break\r\n                    }\r\n                }\r\n                return res\r\n            }\r\n\r\n            //rimuovo le informazioni che l'utente aveva deciso di rimuovere in precedenza\r\n            return Services.getHidedInfo(props.user.username, date)\r\n                .then((response) => {\r\n                    const info = response.data\r\n                    const noticesToHide = []\r\n                    const lessonsToHide = []\r\n                    const officehoursToHide = []\r\n\r\n                    for(let i in info) {\r\n                        //recupero le informazioni dalla risposta di getHidedInfo\r\n                        let type = info[i][\"tipo\"]\r\n                        let ogg = info[i][\"info\"]\r\n\r\n                        if(type === \"notices\") {\r\n                            noticesToHide.push(ogg[\"titolo\"])\r\n                        } else if(type === \"lessons\") {\r\n                            lessonsToHide.push(ogg[\"nome\"])\r\n                        } else if(type === \"officehours\") {\r\n                            officehoursToHide.push(ogg[\"nome\"])\r\n                        }\r\n                    }\r\n\r\n                    const newNotices = notices.filter((n) => {\r\n                        return diversoDaTutti(n[\"titolo\"], noticesToHide)\r\n                    })\r\n                    setNotices(newNotices)\r\n\r\n                    const newLessons = lessons.filter((l) => {\r\n                        return diversoDaTutti(l[\"nome\"], lessonsToHide)\r\n                    })\r\n                    setLessons(newLessons)\r\n\r\n                    const newOfficehours = officehours.filter((o) => {\r\n                        return diversoDaTutti(o[\"nome\"], officehoursToHide)\r\n                    })\r\n                    setOfficehours(newOfficehours)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                    setNotices(notices)\r\n                    setLessons(lessons)\r\n                    setOfficehours(officehours)\r\n                })\r\n        }\r\n\r\n        retrieveData().then((ev) => {\r\n            checkInfo(ev).then(() => console.log(\"eseguito\"), (err) => console.log(err))\r\n        }, (err) => {\r\n            console.log(err)\r\n        })\r\n    },[date,hided])\r\n\r\n    //funzione che registra la preferenza di un utente registrato a nascondere un particolare evento\r\n    async function hideEvent(eventId) {\r\n        if(props.user === null) {\r\n            return\r\n        }\r\n\r\n        const eventType = eventId.split('-')[0]\r\n        switch(eventType) {\r\n            case 'notices':\r\n                Services.hideNotice(props.user.username, date, notices[eventId[eventId.length-1]])\r\n                        .then((response) => {\r\n                            console.log(response.status)\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        })\r\n                break\r\n            case 'lessons':\r\n                Services.hideLesson(props.user.username, date, lessons[eventId[eventId.length-1]])\r\n                        .then((response) => {\r\n                            console.log(response.status)\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        })\r\n                break\r\n            case 'officehours':\r\n                Services.hideOfficehours(props.user.username, date, officehours[eventId[eventId.length-1]])\r\n                        .then((response) => {\r\n                            console.log(response.status)\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        })\r\n                break\r\n            default:\r\n                console.log(\"evento non trovato\")\r\n                break\r\n        }\r\n        \r\n        setHided(hided+1) //fa scattare il refresh\r\n    }\r\n\r\n    async function hidedInfo(d) {\r\n        props.selectedDate(d)\r\n        props.history.push('/hidedInfo')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1>Ciao, {props.user.username}!</h1>\r\n            <p>Puoi personalizzare la pagina nascondendo avvisi, lezioni e ricevimenti che non ti interessano cliccando sui pulsanti nella colonna 'Rimuovi'.</p>\r\n            <p>Clicca sul bottone sottostante per mostrare le informazioni che hai nascosto in precedenza e avrai la possibilità di ripristinarle:</p>\r\n            <p><Button onClick={() => hidedInfo(date).then(() => console.log(\"passato\"), (err) => console.log(err))}>Info rimosse</Button></p>\r\n            \r\n            <Form>\r\n                <Form.Group className=\"mb-3\" controlId=\"formCalendar\">\r\n                    <Form.Label>Seleziona una data dal calendario sottostante per vedere avvisi, lezioni e ricevimenti di quel giorno:</Form.Label>\r\n                    <Form.Control\r\n                        className=\"halfCal\"\r\n                        type=\"date\"\r\n                        value={date}\r\n                        onChange={onChangeDate}\r\n                        max={today}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n            </Form>\r\n\r\n            <Tabs defaultActiveKey=\"avvisi\" id=\"events-tabs\">\r\n                <Tab eventKey=\"avvisi\" title=\"Avvisi\">\r\n                    <Table striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Data di pubblicazione</th>\r\n                                <th>Titolo</th>\r\n                                <th>Testo</th>\r\n                                <th>Mittenti</th>\r\n                                <th>Rimuovi</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {notices.map((n, index) => {\r\n                                if (n.length !== 0) {\r\n                                    const dataPubblicazione = new Date(n[\"dataPubblicazione\"]).toLocaleString(navigator.language, {\r\n                                        weekday: 'long',\r\n                                        year: 'numeric',\r\n                                        month: 'long',\r\n                                        day: 'numeric'\r\n                                    })\r\n                                    return(\r\n                                        <tr key={`notices-${date}-${index}`}>\r\n                                            <td>{dataPubblicazione}</td>\r\n                                            <td>{n[\"titolo\"]}</td>\r\n                                            <td>{convertToPlainText(n[\"testo\"])}</td>\r\n                                            <td>{n[\"mittenti\"]}</td>\r\n                                            <td className=\"centerButton\">\r\n                                                <Button\r\n                                                    variant=\"danger\"\r\n                                                    size=\"sm\"\r\n                                                    aria-label=\"rimuovi\"\r\n                                                    onClick={() => {\r\n                                                        hideEvent(`notices-${date}-${index}`).then(() => console.log(\"nascosto\"), (err) => console.log(err))\r\n                                                    }} //se chiamo solamente la funzione viene eseguito solo alla creazione della riga\r\n                                                >X</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                } else {\r\n                                    return(\r\n                                        <tr key={`notices-${date}-${index}`}></tr>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                    {notices.length === 0 ? (<p>Non ci sono avvisi da mostrare!</p>) : (<p></p>)}\r\n                </Tab>\r\n                <Tab eventKey=\"lezioni\" title=\"Lezioni\">\r\n                    <Table striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Insegnamento, Docente, Corso di Studi</th>\r\n                                <th>Ora</th>\r\n                                <th>Luogo</th>\r\n                                <th>Rimuovi</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {lessons.map((l, index) => {\r\n                                //calcolo quali informazioni sono disponibili\r\n                                let nome = null\r\n                                let ora = null\r\n                                let luogo = null\r\n                                if (l.length !== 0) {\r\n                                    nome = l[\"nome\"].replace(\"##\",\", \").replace(\"\\\\n\",\" \").replace(\"@\",\", \").replace(\"||\",\"\")\r\n                                    if (l[\"intervallo\"].length !== 0) {\r\n                                        ora = `${prettyTime(l[\"intervallo\"][0][\"oraInizio\"])} - ${prettyTime(l[\"intervallo\"][0][\"oraFine\"])}`\r\n                                        if (l[\"intervallo\"][0][\"luogo\"].length !== 0) {\r\n                                            luogo = prettyLuogo(l[\"intervallo\"][0][\"luogo\"][0])\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return(\r\n                                    <tr key={`lessons-${date}-${index}`}>\r\n                                        {nome ? ( <td>{nome}</td> ) : ( <td></td> )}\r\n                                        {ora ? ( <td>{ora}</td> ) : ( <td></td> )}\r\n                                        {luogo ? ( <td>{luogo}</td> ) : ( <td></td> )}\r\n                                        {nome ? (\r\n                                        <td className=\"centerButton\">\r\n                                            <Button\r\n                                                variant=\"danger\"\r\n                                                size=\"sm\"\r\n                                                aria-label=\"rimuovi\"\r\n                                                onClick={() => {\r\n                                                    hideEvent(`lessons-${date}-${index}`).then(() => console.log(\"nascosto\"), (err) => console.log(err))\r\n                                                }}\r\n                                            >X</Button>\r\n                                        </td> ) : ( <td></td> )}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                    {lessons.length === 0 ? (<p>Non ci sono lezioni da mostrare!</p>) : (<p></p>)}\r\n                </Tab>\r\n                <Tab eventKey=\"ricevimenti\" title=\"Ricevimenti\">\r\n                    <Table striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th>Note</th>\r\n                                <th>Ora</th>\r\n                                <th>Luogo</th>\r\n                                <th>Rimuovi</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {officehours.map((o, index) => {\r\n                                //calcolo quali informazioni sono disponibili\r\n                                let nome = null\r\n                                let note = null\r\n                                let ora = null\r\n                                let luogo = null\r\n                                if (o.length !== 0) {\r\n                                    nome = o[\"nome\"]\r\n                                    note = o[\"note\"]\r\n                                    if (o[\"intervallo\"].length !== 0) {\r\n                                        ora = `${prettyTime(o[\"intervallo\"][0][\"oraInizio\"])} - ${prettyTime(o[\"intervallo\"][0][\"oraFine\"])}`\r\n                                        if (o[\"intervallo\"][0][\"luogo\"].length !== 0) {\r\n                                            luogo = prettyLuogo(o[\"intervallo\"][0][\"luogo\"][0])\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return(\r\n                                    <tr key={`officehours-${date}-${index}`}>\r\n                                        {nome ? ( <td>{nome}</td> ) : ( <td></td> )}\r\n                                        {note ? ( <td>{convertToPlainText(note)}</td> ) : ( <td></td> )}\r\n                                        {ora ? ( <td>{ora}</td> ) : ( <td></td> )}\r\n                                        {luogo ? ( <td>{luogo}</td> ) : ( <td></td> )}\r\n                                        {nome ? (\r\n                                        <td className=\"centerButton\">\r\n                                            <Button\r\n                                                variant=\"danger\"\r\n                                                size=\"sm\"\r\n                                                aria-label=\"rimuovi\"\r\n                                                onClick={() => {\r\n                                                    hideEvent(`officehours-${date}-${index}`).then(() => console.log(\"nascosto\"), (err) => console.log(err))\r\n                                                }}\r\n                                            >X</Button>\r\n                                        </td> ) : ( <td></td> )}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                    {officehours.length === 0 ? (<p>Non ci sono ricevimenti da mostrare!</p>) : (<p></p>)}\r\n                </Tab>\r\n            </Tabs>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default EventsRegUser\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Container from 'react-bootstrap/Container'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport Services from '../services'\r\n\r\nimport '../index.css'\r\n\r\nconst prettyTime = (date) => {\r\n    var d = new Date(date)\r\n    return d.toLocaleTimeString(navigator.language, {\r\n        hour: '2-digit',\r\n        minute:'2-digit'\r\n    })\r\n}\r\n\r\nconst prettyLuogo = (luogo) => {\r\n    return `${luogo[\"tipo\"]} ${luogo[\"nome\"]}, Ca' Vignal ${luogo[\"idEdificio\"]}`\r\n}\r\n\r\nconst convertToPlainText = (html) => {\r\n    var tmpElement = document.createElement('p')\r\n    tmpElement.innerHTML = html\r\n    return tmpElement.innerText\r\n}\r\n\r\nconst RemovedInfo = (props) => {\r\n    const [date, setDate] = useState(() => {\r\n        const selDate = localStorage.getItem('date') //recupero la data in memoria\r\n        if(selDate) {\r\n            return JSON.parse(selDate).date\r\n        }\r\n        return props.date\r\n    })\r\n    const [notices, setNotices] = useState([]) //corrispondono ai rispettivi array presenti nei dati json (all'inizio sono vuoti)\r\n    const [lessons, setLessons] = useState([])\r\n    const [officehours, setOfficehours] = useState([])\r\n    const [unhided, setUnhided] = useState(0)\r\n\r\n    useEffect(() => {\r\n        async function checkInfo() {\r\n            return Services.getHidedInfo(props.user.username, date)\r\n                    .then((response) => {\r\n                        const info = response.data\r\n                        const notices = []\r\n                        const lessons = []\r\n                        const officehours = []\r\n\r\n                        for(let i in info) {\r\n                            //recupero le informazioni dalla risposta di getfinish\r\n                            let type = info[i][\"tipo\"]\r\n                            let ogg = info[i][\"info\"]\r\n\r\n                            if(type === \"notices\") {\r\n                                notices.push(ogg)\r\n                            } else if(type === \"lessons\") {\r\n                                lessons.push(ogg)\r\n                            } else if(type === \"officehours\") {\r\n                                officehours.push(ogg)\r\n                            }\r\n                        }\r\n\r\n                        setNotices(notices)\r\n                        setLessons(lessons)\r\n                        setOfficehours(officehours)\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error)\r\n                        setNotices([])\r\n                        setLessons([])\r\n                        setOfficehours([])\r\n                    })\r\n        }\r\n\r\n        checkInfo().then(() => console.log(\"eseguito\"), (err) => console.log(err))\r\n    },[unhided])\r\n\r\n    //funzione che registra la preferenza di un utente registrato a nascondere un particolare evento\r\n    async function unhideEvent(eventId) {\r\n        if(props.user === null) {\r\n            return\r\n        }\r\n\r\n        const eventType = eventId.split('-')[0]\r\n        \r\n        let event = null\r\n        switch(eventType) {\r\n            case 'notices':\r\n                event = notices[eventId[eventId.length-1]]\r\n                break\r\n            case 'lessons':\r\n                event = lessons[eventId[eventId.length-1]]\r\n                break\r\n            case 'officehours':\r\n                event = officehours[eventId[eventId.length-1]]\r\n                break\r\n            default:\r\n                console.log(\"evento non trovato\")\r\n                break\r\n        }\r\n        Services.removeEvent(props.user.username, date, eventType, event)\r\n                .then((response) => {\r\n                    console.log(response.status)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })\r\n        \r\n        setUnhided(unhided+1) //fa scattare il refresh\r\n    }\r\n\r\n    async function finish() {\r\n        props.selectedDate(date)\r\n        props.history.push('/')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1>Ciao, {props.user.username}!</h1>\r\n            <p>Se hai cambiato idea sulla rimozione di questi eventi puoi annullare l'azione cliccando sui pulsanti nella colonna 'Annulla'.</p>\r\n            <p>Quando hai finito torna indietro oppure clicca sul pulsante 'Fine' sottostante per tornare alla pagina degli eventi.</p>\r\n            <p><Button onClick={() => finish().then(() => console.log(\"fine\"), (err) => console.log(err))}>Fine</Button></p>\r\n            \r\n            <Tabs defaultActiveKey=\"avvisi\" id=\"events-tabs\">\r\n                <Tab eventKey=\"avvisi\" title=\"Avvisi\">\r\n                    <Table striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Data di pubblicazione</th>\r\n                                <th>Titolo</th>\r\n                                <th>Testo</th>\r\n                                <th>Mittenti</th>\r\n                                <th>Annulla</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {notices.map((n, index) => {\r\n                                if (n.length !== 0) {\r\n                                    const dataPubblicazione = new Date(n[\"dataPubblicazione\"]).toLocaleString(navigator.language, {\r\n                                        weekday: 'long',\r\n                                        year: 'numeric',\r\n                                        month: 'long',\r\n                                        day: 'numeric'\r\n                                    })\r\n                                    return(\r\n                                        <tr key={`notice-${date}-${index}`}>\r\n                                            <td>{dataPubblicazione}</td>\r\n                                            <td>{n[\"titolo\"]}</td>\r\n                                            <td>{convertToPlainText(n[\"testo\"])}</td>\r\n                                            <td>{n[\"mittenti\"]}</td>\r\n                                            <td className=\"centerButton\">\r\n                                                <Button\r\n                                                    variant=\"success\"\r\n                                                    size=\"sm\"\r\n                                                    aria-label=\"annulla\"\r\n                                                    onClick={() => {\r\n                                                        unhideEvent(`notices-${date}-${index}`).then(() => console.log(\"ripristinato\"), (err) => console.log(err))\r\n                                                    }} //se chiamo solamente la funzione viene eseguito solo alla creazione della riga\r\n                                                >+</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                } else {\r\n                                    return(\r\n                                        <tr key={`notice-${date}-${index}`}></tr>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                    {notices.length === 0 ? (<p>Non ci sono avvisi da mostrare!</p>) : (<p></p>)}\r\n                </Tab>\r\n                <Tab eventKey=\"lezioni\" title=\"Lezioni\">\r\n                    <Table striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Insegnamento, Docente, Corso di Studi</th>\r\n                                <th>Ora</th>\r\n                                <th>Luogo</th>\r\n                                <th>Annulla</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {lessons.map((l, index) => {\r\n                                //calcolo quali informazioni sono disponibili\r\n                                let nome = null\r\n                                let ora = null\r\n                                let luogo = null\r\n                                if (l.length !== 0) {\r\n                                    nome = l[\"nome\"].replace(\"##\",\", \").replace(\"\\\\n\",\" \").replace(\"@\",\", \").replace(\"||\",\"\")\r\n                                    if (l[\"intervallo\"].length !== 0) {\r\n                                        ora = `${prettyTime(l[\"intervallo\"][0][\"oraInizio\"])} - ${prettyTime(l[\"intervallo\"][0][\"oraFine\"])}`\r\n                                        if (l[\"intervallo\"][0][\"luogo\"].length !== 0) {\r\n                                            luogo = prettyLuogo(l[\"intervallo\"][0][\"luogo\"][0])\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return(\r\n                                    <tr key={`lesson-${date}-${index}`}>\r\n                                        {nome ? ( <td>{nome}</td> ) : ( <td></td> )}\r\n                                        {ora ? ( <td>{ora}</td> ) : ( <td></td> )}\r\n                                        {luogo ? ( <td>{luogo}</td> ) : ( <td></td> )}\r\n                                        {nome ? (\r\n                                        <td className=\"centerButton\">\r\n                                            <Button\r\n                                                variant=\"success\"\r\n                                                size=\"sm\"\r\n                                                aria-label=\"annulla\"\r\n                                                onClick={() => {\r\n                                                    unhideEvent(`lessons-${date}-${index}`).then(() => console.log(\"ripristinato\"), (err) => console.log(err))\r\n                                                }}\r\n                                            >+</Button>\r\n                                        </td> ) : ( <td></td> )}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                    {lessons.length === 0 ? (<p>Non ci sono lezioni da mostrare!</p>) : (<p></p>)}\r\n                </Tab>\r\n                <Tab eventKey=\"ricevimenti\" title=\"Ricevimenti\">\r\n                    <Table striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th>Note</th>\r\n                                <th>Ora</th>\r\n                                <th>Luogo</th>\r\n                                <th>Annulla</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {officehours.map((o, index) => {\r\n                                //calcolo quali informazioni sono disponibili\r\n                                let nome = null\r\n                                let note = null\r\n                                let ora = null\r\n                                let luogo = null\r\n                                if (o.length !== 0) {\r\n                                    nome = o[\"nome\"]\r\n                                    note = o[\"note\"]\r\n                                    if (o[\"intervallo\"].length !== 0) {\r\n                                        ora = `${prettyTime(o[\"intervallo\"][0][\"oraInizio\"])} - ${prettyTime(o[\"intervallo\"][0][\"oraFine\"])}`\r\n                                        if (o[\"intervallo\"][0][\"luogo\"].length !== 0) {\r\n                                            luogo = prettyLuogo(o[\"intervallo\"][0][\"luogo\"][0])\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return(\r\n                                    <tr key={`officehours-${date}-${index}`}>\r\n                                        {nome ? ( <td>{nome}</td> ) : ( <td></td> )}\r\n                                        {note ? ( <td>{convertToPlainText(note)}</td> ) : ( <td></td> )}\r\n                                        {ora ? ( <td>{ora}</td> ) : ( <td></td> )}\r\n                                        {luogo ? ( <td>{luogo}</td> ) : ( <td></td> )}\r\n                                        {nome ? (\r\n                                        <td className=\"centerButton\">\r\n                                            <Button\r\n                                                variant=\"success\"\r\n                                                size=\"sm\"\r\n                                                aria-label=\"annulla\"\r\n                                                onClick={() => {\r\n                                                    unhideEvent(`officehours-${date}-${index}`).then(() => console.log(\"ripristinato\"), (err) => console.log(err))\r\n                                                }}\r\n                                            >+</Button>\r\n                                        </td> ) : ( <td></td> )}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                    {officehours.length === 0 ? (<p>Non ci sono ricevimenti da mostrare!</p>) : (<p></p>)}\r\n                </Tab>\r\n            </Tabs>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RemovedInfo\r\n","import React, { useState, useEffect } from 'react'\n\n//react-bootstrap\nimport Container from 'react-bootstrap/Container'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\n//bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\n//routing\nimport { Switch, Route, Link } from \"react-router-dom\"\n\n//componenti\nimport Login from \"./components/login\"\nimport SignUp from \"./components/signUp\"\nimport Events from \"./components/events\"\nimport EventsRegUser from \"./components/eventsRegUser\"\nimport RemovedInfo from \"./components/removedInfo\"\n\nconst today = new Date().toISOString().split('T')[0]\n\nfunction App() {\n    const [user, setUser] = useState(() => {\n        const loggedInUser = localStorage.getItem('user')\n        if(loggedInUser) {\n            return JSON.parse(loggedInUser)\n        }\n        return null\n    })\n    const [date, setDate] = useState(today)\n\n    async function login(user = null) { //default user = null\n        setUser(user)\n        localStorage.setItem('user', JSON.stringify(user))\n    }\n\n    async function logout() {\n        setUser(null)\n        localStorage.clear()\n    }\n\n    async function selectedDate(d) {\n        setDate(d)\n        localStorage.setItem('date', JSON.stringify({date: d}))\n    }\n\n    useEffect(() => {\n        if(user) {\n            document.title = `Pagina iniziale - ${user.username} - Eventi UniVR`\n        } else {\n            document.title = \"Pagina iniziale - Eventi UniVR\"\n        }\n    }, [user])\n\n    return (\n        <div className=\"App\" role=\"main\">\n            <Navbar expand=\"lg\" bg=\"light\" variant=\"light\">\n                <Container>\n                    <Navbar.Brand href=\"https://zampierida98.github.io/eventi-univr/\">Eventi UniVR</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                            { user ? (\n                                <Navbar.Text>Sei registrato come: {user.username}</Navbar.Text>\n                            ) : (\n                                <Link to={\"/signup\"} className=\"navLink\">Registrati</Link>\n                            )}\n                        </Nav>\n                        <Nav>\n                            { user ? (\n                                <Nav.Link onClick={logout} href={\"https://zampierida98.github.io/eventi-univr/\"}>Esci</Nav.Link>\n                            ) : (\n                                <Link to={\"/login\"} className=\"navLink\">Accedi</Link>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n            \n            <Switch>\n                <Route exact path=\"/\" render={ (props) =>\n                    //login effettuato ? sì=EventsRegUser : no=Events\n                    user ? (<EventsRegUser {...props} user={user} date={date} selectedDate={selectedDate} />)\n                         : (<Events {...props} selectedDate={selectedDate} />)\n                }>\n                </Route>\n                <Route path=\"/login\" render={ (props) =>\n                    <Login {...props} login={login} />\n                }>\n                </Route>\n                <Route path=\"/signup\" render={ (props) =>\n                    <SignUp {...props} login={login} />\n                }>\n                </Route>\n                <Route path=\"/hidedInfo\" render={ (props) =>\n                    //login effettuato ? sì=RemovedInfo : no=non fa nulla\n                    user ? (<RemovedInfo {...props} user={user} date={date} selectedDate={selectedDate} />)\n                         : (<Events {...props} selectedDate={selectedDate} />)\n                }>\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom';\n\ndocument.documentElement.lang = 'it';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}